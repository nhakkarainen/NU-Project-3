<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20212.21.1014.1036                               -->
<workbook source-build='2021.2.4 (20212.21.1014.1036)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='housing_prices' inline='true' name='federated.171xzxs04g7zhv11xnwar0nl9eup' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Days on Market' name='textscan.0wsdm6b0o27w9a11cb6ah0ugmwzu'>
            <connection class='textscan' directory='C:/Users/devyn/Downloads' filename='days_on_market.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0wsdm6b0o27w9a11cb6ah0ugmwzu' name='days_on_market.csv' table='[days_on_market#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='StateID' ordinal='0' />
            <column datatype='string' name='StateName' ordinal='1' />
            <column datatype='integer' name='Feb2018' ordinal='2' />
            <column datatype='integer' name='Mar2018' ordinal='3' />
            <column datatype='integer' name='Apr2018' ordinal='4' />
            <column datatype='integer' name='May2018' ordinal='5' />
            <column datatype='integer' name='Jun2018' ordinal='6' />
            <column datatype='integer' name='Jul2018' ordinal='7' />
            <column datatype='integer' name='Aug2018' ordinal='8' />
            <column datatype='integer' name='Sep2018' ordinal='9' />
            <column datatype='integer' name='Oct2018' ordinal='10' />
            <column datatype='integer' name='Nov2018' ordinal='11' />
            <column datatype='integer' name='Dec2018' ordinal='12' />
            <column datatype='integer' name='Jan2019' ordinal='13' />
            <column datatype='integer' name='Feb2019' ordinal='14' />
            <column datatype='integer' name='Mar2019' ordinal='15' />
            <column datatype='integer' name='Apr2019' ordinal='16' />
            <column datatype='integer' name='May2019' ordinal='17' />
            <column datatype='integer' name='Jun2019' ordinal='18' />
            <column datatype='integer' name='Jul2019' ordinal='19' />
            <column datatype='integer' name='Aug2019' ordinal='20' />
            <column datatype='integer' name='Sep2019' ordinal='21' />
            <column datatype='integer' name='Oct2019' ordinal='22' />
            <column datatype='integer' name='Nov2019' ordinal='23' />
            <column datatype='integer' name='Dec2019' ordinal='24' />
            <column datatype='integer' name='Jan2020' ordinal='25' />
            <column datatype='integer' name='Feb2020' ordinal='26' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0wsdm6b0o27w9a11cb6ah0ugmwzu' name='days_on_market.csv' table='[days_on_market#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='StateID' ordinal='0' />
            <column datatype='string' name='StateName' ordinal='1' />
            <column datatype='integer' name='Feb2018' ordinal='2' />
            <column datatype='integer' name='Mar2018' ordinal='3' />
            <column datatype='integer' name='Apr2018' ordinal='4' />
            <column datatype='integer' name='May2018' ordinal='5' />
            <column datatype='integer' name='Jun2018' ordinal='6' />
            <column datatype='integer' name='Jul2018' ordinal='7' />
            <column datatype='integer' name='Aug2018' ordinal='8' />
            <column datatype='integer' name='Sep2018' ordinal='9' />
            <column datatype='integer' name='Oct2018' ordinal='10' />
            <column datatype='integer' name='Nov2018' ordinal='11' />
            <column datatype='integer' name='Dec2018' ordinal='12' />
            <column datatype='integer' name='Jan2019' ordinal='13' />
            <column datatype='integer' name='Feb2019' ordinal='14' />
            <column datatype='integer' name='Mar2019' ordinal='15' />
            <column datatype='integer' name='Apr2019' ordinal='16' />
            <column datatype='integer' name='May2019' ordinal='17' />
            <column datatype='integer' name='Jun2019' ordinal='18' />
            <column datatype='integer' name='Jul2019' ordinal='19' />
            <column datatype='integer' name='Aug2019' ordinal='20' />
            <column datatype='integer' name='Sep2019' ordinal='21' />
            <column datatype='integer' name='Oct2019' ordinal='22' />
            <column datatype='integer' name='Nov2019' ordinal='23' />
            <column datatype='integer' name='Dec2019' ordinal='24' />
            <column datatype='integer' name='Jan2020' ordinal='25' />
            <column datatype='integer' name='Feb2020' ordinal='26' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[days_on_market.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>StateID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[StateID]</local-name>
            <parent-name>[days_on_market.csv]</parent-name>
            <remote-alias>StateID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[days_on_market.csv_A1CF33FDE23041B5A0B3D84D2C6399AD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>StateName</remote-name>
            <remote-type>129</remote-type>
            <local-name>[StateName]</local-name>
            <parent-name>[days_on_market.csv]</parent-name>
            <remote-alias>StateName</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[days_on_market.csv_A1CF33FDE23041B5A0B3D84D2C6399AD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Feb2018</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Feb2018]</local-name>
            <parent-name>[days_on_market.csv]</parent-name>
            <remote-alias>Feb2018</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[days_on_market.csv_A1CF33FDE23041B5A0B3D84D2C6399AD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Mar2018</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Mar2018]</local-name>
            <parent-name>[days_on_market.csv]</parent-name>
            <remote-alias>Mar2018</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[days_on_market.csv_A1CF33FDE23041B5A0B3D84D2C6399AD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Apr2018</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Apr2018]</local-name>
            <parent-name>[days_on_market.csv]</parent-name>
            <remote-alias>Apr2018</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[days_on_market.csv_A1CF33FDE23041B5A0B3D84D2C6399AD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>May2018</remote-name>
            <remote-type>20</remote-type>
            <local-name>[May2018]</local-name>
            <parent-name>[days_on_market.csv]</parent-name>
            <remote-alias>May2018</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[days_on_market.csv_A1CF33FDE23041B5A0B3D84D2C6399AD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Jun2018</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Jun2018]</local-name>
            <parent-name>[days_on_market.csv]</parent-name>
            <remote-alias>Jun2018</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[days_on_market.csv_A1CF33FDE23041B5A0B3D84D2C6399AD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Jul2018</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Jul2018]</local-name>
            <parent-name>[days_on_market.csv]</parent-name>
            <remote-alias>Jul2018</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[days_on_market.csv_A1CF33FDE23041B5A0B3D84D2C6399AD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Aug2018</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Aug2018]</local-name>
            <parent-name>[days_on_market.csv]</parent-name>
            <remote-alias>Aug2018</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[days_on_market.csv_A1CF33FDE23041B5A0B3D84D2C6399AD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sep2018</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Sep2018]</local-name>
            <parent-name>[days_on_market.csv]</parent-name>
            <remote-alias>Sep2018</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[days_on_market.csv_A1CF33FDE23041B5A0B3D84D2C6399AD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Oct2018</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Oct2018]</local-name>
            <parent-name>[days_on_market.csv]</parent-name>
            <remote-alias>Oct2018</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[days_on_market.csv_A1CF33FDE23041B5A0B3D84D2C6399AD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Nov2018</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Nov2018]</local-name>
            <parent-name>[days_on_market.csv]</parent-name>
            <remote-alias>Nov2018</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[days_on_market.csv_A1CF33FDE23041B5A0B3D84D2C6399AD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Dec2018</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Dec2018]</local-name>
            <parent-name>[days_on_market.csv]</parent-name>
            <remote-alias>Dec2018</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[days_on_market.csv_A1CF33FDE23041B5A0B3D84D2C6399AD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Jan2019</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Jan2019]</local-name>
            <parent-name>[days_on_market.csv]</parent-name>
            <remote-alias>Jan2019</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[days_on_market.csv_A1CF33FDE23041B5A0B3D84D2C6399AD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Feb2019</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Feb2019]</local-name>
            <parent-name>[days_on_market.csv]</parent-name>
            <remote-alias>Feb2019</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[days_on_market.csv_A1CF33FDE23041B5A0B3D84D2C6399AD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Mar2019</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Mar2019]</local-name>
            <parent-name>[days_on_market.csv]</parent-name>
            <remote-alias>Mar2019</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[days_on_market.csv_A1CF33FDE23041B5A0B3D84D2C6399AD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Apr2019</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Apr2019]</local-name>
            <parent-name>[days_on_market.csv]</parent-name>
            <remote-alias>Apr2019</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[days_on_market.csv_A1CF33FDE23041B5A0B3D84D2C6399AD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>May2019</remote-name>
            <remote-type>20</remote-type>
            <local-name>[May2019]</local-name>
            <parent-name>[days_on_market.csv]</parent-name>
            <remote-alias>May2019</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[days_on_market.csv_A1CF33FDE23041B5A0B3D84D2C6399AD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Jun2019</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Jun2019]</local-name>
            <parent-name>[days_on_market.csv]</parent-name>
            <remote-alias>Jun2019</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[days_on_market.csv_A1CF33FDE23041B5A0B3D84D2C6399AD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Jul2019</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Jul2019]</local-name>
            <parent-name>[days_on_market.csv]</parent-name>
            <remote-alias>Jul2019</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[days_on_market.csv_A1CF33FDE23041B5A0B3D84D2C6399AD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Aug2019</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Aug2019]</local-name>
            <parent-name>[days_on_market.csv]</parent-name>
            <remote-alias>Aug2019</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[days_on_market.csv_A1CF33FDE23041B5A0B3D84D2C6399AD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sep2019</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Sep2019]</local-name>
            <parent-name>[days_on_market.csv]</parent-name>
            <remote-alias>Sep2019</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[days_on_market.csv_A1CF33FDE23041B5A0B3D84D2C6399AD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Oct2019</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Oct2019]</local-name>
            <parent-name>[days_on_market.csv]</parent-name>
            <remote-alias>Oct2019</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[days_on_market.csv_A1CF33FDE23041B5A0B3D84D2C6399AD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Nov2019</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Nov2019]</local-name>
            <parent-name>[days_on_market.csv]</parent-name>
            <remote-alias>Nov2019</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[days_on_market.csv_A1CF33FDE23041B5A0B3D84D2C6399AD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Dec2019</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Dec2019]</local-name>
            <parent-name>[days_on_market.csv]</parent-name>
            <remote-alias>Dec2019</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[days_on_market.csv_A1CF33FDE23041B5A0B3D84D2C6399AD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Jan2020</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Jan2020]</local-name>
            <parent-name>[days_on_market.csv]</parent-name>
            <remote-alias>Jan2020</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[days_on_market.csv_A1CF33FDE23041B5A0B3D84D2C6399AD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Feb2020</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Feb2020]</local-name>
            <parent-name>[days_on_market.csv]</parent-name>
            <remote-alias>Feb2020</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[days_on_market.csv_A1CF33FDE23041B5A0B3D84D2C6399AD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[avg:Apr2018:qk]&quot;' value='Apr 2018' />
          <alias key='&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[avg:Feb2018:qk]&quot;' value='Feb 2018' />
          <alias key='&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[avg:Jul2018:qk]&quot;' value='Jul 2018' />
          <alias key='&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[avg:Jun2018:qk]&quot;' value='Jun 2018' />
          <alias key='&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[avg:Mar2018:qk]&quot;' value='Mar 2018' />
          <alias key='&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[avg:May2018:qk]&quot;' value='May 2018' />
          <alias key='&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[avg:Sep2018:qk]&quot;' value='Sep 2018' />
        </aliases>
      </column>
      <column datatype='integer' name='[Apr2018]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Apr2019]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Aug2018]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Aug2019]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Dec2018]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Dec2019]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Feb2018]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Feb2019]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Feb2020]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Jan2019]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Jan2020]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Jul2018]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Jul2019]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Jun2018]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Jun2019]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Mar2018]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Mar2019]' role='measure' type='quantitative' />
      <column datatype='integer' name='[May2018]' role='measure' type='quantitative' />
      <column datatype='integer' name='[May2019]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Nov2018]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Nov2019]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Oct2018]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Oct2019]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Sep2018]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Sep2019]' role='measure' type='quantitative' />
      <column caption='State ID' datatype='integer' name='[StateID]' role='dimension' type='ordinal' />
      <column caption='State Name' datatype='string' name='[StateName]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='days_on_market.csv' datatype='table' name='[__tableau_internal_object_id__].[days_on_market.csv_A1CF33FDE23041B5A0B3D84D2C6399AD]' role='measure' type='quantitative' />
      <column-instance column='[Apr2018]' derivation='Avg' name='[avg:Apr2018:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Apr2019]' derivation='Avg' name='[avg:Apr2019:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Aug2018]' derivation='Avg' name='[avg:Aug2018:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Aug2019]' derivation='Avg' name='[avg:Aug2019:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Dec2018]' derivation='Avg' name='[avg:Dec2018:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Dec2019]' derivation='Avg' name='[avg:Dec2019:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Feb2018]' derivation='Avg' name='[avg:Feb2018:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Feb2019]' derivation='Avg' name='[avg:Feb2019:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Feb2020]' derivation='Avg' name='[avg:Feb2020:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Jan2019]' derivation='Avg' name='[avg:Jan2019:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Jan2020]' derivation='Avg' name='[avg:Jan2020:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Jul2018]' derivation='Avg' name='[avg:Jul2018:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Jul2019]' derivation='Avg' name='[avg:Jul2019:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Jun2018]' derivation='Avg' name='[avg:Jun2018:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Jun2019]' derivation='Avg' name='[avg:Jun2019:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Mar2018]' derivation='Avg' name='[avg:Mar2018:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Mar2019]' derivation='Avg' name='[avg:Mar2019:qk]' pivot='key' type='quantitative' />
      <column-instance column='[May2018]' derivation='Avg' name='[avg:May2018:qk]' pivot='key' type='quantitative' />
      <column-instance column='[May2019]' derivation='Avg' name='[avg:May2019:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Nov2018]' derivation='Avg' name='[avg:Nov2018:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Nov2019]' derivation='Avg' name='[avg:Nov2019:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Oct2018]' derivation='Avg' name='[avg:Oct2018:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Oct2019]' derivation='Avg' name='[avg:Oct2019:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Sep2018]' derivation='Avg' name='[avg:Sep2018:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Sep2019]' derivation='Avg' name='[avg:Sep2019:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Apr2018]' derivation='Count' name='[cnt:Apr2018:qk]' pivot='key' type='quantitative' />
      <column-instance column='[StateName]' derivation='None' name='[none:StateName:nk]' pivot='key' type='nominal' />
      <column-instance column='[Apr2018]' derivation='Sum' name='[sum:Apr2018:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Apr2019]' derivation='Sum' name='[sum:Apr2019:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Aug2018]' derivation='Sum' name='[sum:Aug2018:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Aug2019]' derivation='Sum' name='[sum:Aug2019:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Dec2018]' derivation='Sum' name='[sum:Dec2018:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Dec2019]' derivation='Sum' name='[sum:Dec2019:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Feb2019]' derivation='Sum' name='[sum:Feb2019:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Feb2020]' derivation='Sum' name='[sum:Feb2020:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Jan2019]' derivation='Sum' name='[sum:Jan2019:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Jan2020]' derivation='Sum' name='[sum:Jan2020:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Jul2018]' derivation='Sum' name='[sum:Jul2018:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Jul2019]' derivation='Sum' name='[sum:Jul2019:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Jun2018]' derivation='Sum' name='[sum:Jun2018:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Jun2019]' derivation='Sum' name='[sum:Jun2019:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Mar2018]' derivation='Sum' name='[sum:Mar2018:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Mar2019]' derivation='Sum' name='[sum:Mar2019:qk]' pivot='key' type='quantitative' />
      <column-instance column='[May2018]' derivation='Sum' name='[sum:May2018:qk]' pivot='key' type='quantitative' />
      <column-instance column='[May2019]' derivation='Sum' name='[sum:May2019:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Nov2018]' derivation='Sum' name='[sum:Nov2018:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Nov2019]' derivation='Sum' name='[sum:Nov2019:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Oct2018]' derivation='Sum' name='[sum:Oct2018:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Oct2019]' derivation='Sum' name='[sum:Oct2019:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Sep2018]' derivation='Sum' name='[sum:Sep2018:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Sep2019]' derivation='Sum' name='[sum:Sep2019:qk]' pivot='key' type='quantitative' />
      <drill-paths>
        <drill-path name='State, CountyName' />
      </drill-paths>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[avg:Jan2019:qk]&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[sum:Jan2019:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[avg:Apr2018:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[avg:Nov2019:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[cnt:Apr2018:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[sum:Apr2018:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[sum:Nov2019:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[avg:Dec2018:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[avg:Sep2019:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[cum:usr:Calculation_651614597750996992:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[diff:usr:Calculation_651614597750996992:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[pcto:usr:Calculation_651614597750996992:qk:2]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[pcto:usr:Calculation_651614597750996992:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[rank:usr:Calculation_651614597750996992:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[sum:Dec2018:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[sum:Sep2019:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[usr:Calculation_651614597750996992:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[usr:Calculation1:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[win:usr:Calculation_651614597750996992:qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[avg:Jun2018:qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[sum:Jun2018:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[avg:Jan2020:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[sum:Index:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[sum:Jan2020:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[avg:Dec2019:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[sum:Dec2019:qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[avg:May2019:qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[sum:May2019:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[avg:Apr2019:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[avg:Oct2018:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[sum:Apr2019:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[sum:Oct2018:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[avg:Mar2020:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[sum:Mar2020:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[avg:Feb2019:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[sum:Feb2019:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[avg:Jun2019:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[sum:Jun2019:qk]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[avg:Mar2018:qk]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[sum:Mar2018:qk]&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[avg:May2018:qk]&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[sum:May2018:qk]&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[avg:Nov2018:qk]&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[sum:Nov2018:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[avg:Jul2018:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[sum:Jul2018:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[avg:Feb2020:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[sum:Feb2020:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[avg:Aug2018:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[avg:Oct2019:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[sum:Aug2018:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[sum:Oct2019:qk]&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[avg:Mar2019:qk]&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[sum:Mar2019:qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[avg:Jul2019:qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[sum:Jul2019:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[avg:Aug2019:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[avg:Sep2018:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[sum:Aug2019:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[sum:Sep2018:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:StateName:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;District of Columbia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nebraska&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Alabama&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;California&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Rhode Island&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Illinois&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Maryland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Idaho&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;New York&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mississippi&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;New Hampshire&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;West Virginia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Massachusetts&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Michigan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Utah&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Louisiana&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Pennsylvania&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Virginia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Alaska&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Colorado&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kansas&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Oklahoma&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tennessee&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Connecticut&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Minnesota&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Vermont&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nevada&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;North Carolina&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Indiana&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;North Dakota&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Oregon&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kentucky&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Texas&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Maine&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Montana&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;New Jersey&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Wisconsin&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Delaware&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Missouri&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Arizona&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Florida&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;South Dakota&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iowa&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ohio&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;South Carolina&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hawaii&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;New Mexico&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Wyoming&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Arkansas&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='days_on_market.csv' id='days_on_market.csv_A1CF33FDE23041B5A0B3D84D2C6399AD'>
            <properties context=''>
              <relation connection='textscan.0wsdm6b0o27w9a11cb6ah0ugmwzu' name='days_on_market.csv' table='[days_on_market#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='StateID' ordinal='0' />
                  <column datatype='string' name='StateName' ordinal='1' />
                  <column datatype='integer' name='Feb2018' ordinal='2' />
                  <column datatype='integer' name='Mar2018' ordinal='3' />
                  <column datatype='integer' name='Apr2018' ordinal='4' />
                  <column datatype='integer' name='May2018' ordinal='5' />
                  <column datatype='integer' name='Jun2018' ordinal='6' />
                  <column datatype='integer' name='Jul2018' ordinal='7' />
                  <column datatype='integer' name='Aug2018' ordinal='8' />
                  <column datatype='integer' name='Sep2018' ordinal='9' />
                  <column datatype='integer' name='Oct2018' ordinal='10' />
                  <column datatype='integer' name='Nov2018' ordinal='11' />
                  <column datatype='integer' name='Dec2018' ordinal='12' />
                  <column datatype='integer' name='Jan2019' ordinal='13' />
                  <column datatype='integer' name='Feb2019' ordinal='14' />
                  <column datatype='integer' name='Mar2019' ordinal='15' />
                  <column datatype='integer' name='Apr2019' ordinal='16' />
                  <column datatype='integer' name='May2019' ordinal='17' />
                  <column datatype='integer' name='Jun2019' ordinal='18' />
                  <column datatype='integer' name='Jul2019' ordinal='19' />
                  <column datatype='integer' name='Aug2019' ordinal='20' />
                  <column datatype='integer' name='Sep2019' ordinal='21' />
                  <column datatype='integer' name='Oct2019' ordinal='22' />
                  <column datatype='integer' name='Nov2019' ordinal='23' />
                  <column datatype='integer' name='Dec2019' ordinal='24' />
                  <column datatype='integer' name='Jan2020' ordinal='25' />
                  <column datatype='integer' name='Feb2020' ordinal='26' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='2018 Avg Housing Data'>
      <layout-options>
        <title>
          <formatted-text>
            <run>2018</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='housing_prices' name='federated.171xzxs04g7zhv11xnwar0nl9eup' />
          </datasources>
          <datasource-dependencies datasource='federated.171xzxs04g7zhv11xnwar0nl9eup'>
            <column datatype='integer' name='[Apr2018]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Aug2018]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Dec2018]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Feb2018]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Jul2018]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Jun2018]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Mar2018]' role='measure' type='quantitative' />
            <column datatype='integer' name='[May2018]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Nov2018]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Oct2018]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Sep2018]' role='measure' type='quantitative' />
            <column caption='State Name' datatype='string' name='[StateName]' role='dimension' type='nominal' />
            <column-instance column='[StateName]' derivation='None' name='[none:StateName:nk]' pivot='key' type='nominal' />
            <column-instance column='[Apr2018]' derivation='Sum' name='[sum:Apr2018:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Aug2018]' derivation='Sum' name='[sum:Aug2018:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Dec2018]' derivation='Sum' name='[sum:Dec2018:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Feb2018]' derivation='Sum' name='[sum:Feb2018:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Jul2018]' derivation='Sum' name='[sum:Jul2018:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Jun2018]' derivation='Sum' name='[sum:Jun2018:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Mar2018]' derivation='Sum' name='[sum:Mar2018:qk]' pivot='key' type='quantitative' />
            <column-instance column='[May2018]' derivation='Sum' name='[sum:May2018:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Nov2018]' derivation='Sum' name='[sum:Nov2018:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Oct2018]' derivation='Sum' name='[sum:Oct2018:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sep2018]' derivation='Sum' name='[sum:Sep2018:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.171xzxs04g7zhv11xnwar0nl9eup].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[sum:Feb2018:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[sum:Mar2018:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[sum:Apr2018:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[sum:May2018:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[sum:Jun2018:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[sum:Jul2018:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[sum:Sep2018:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[sum:Aug2018:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[sum:Oct2018:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[sum:Nov2018:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[sum:Dec2018:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.171xzxs04g7zhv11xnwar0nl9eup].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[sum:Feb2018:qk]&quot;</bucket>
              <bucket>&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[sum:Mar2018:qk]&quot;</bucket>
              <bucket>&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[sum:Apr2018:qk]&quot;</bucket>
              <bucket>&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[sum:May2018:qk]&quot;</bucket>
              <bucket>&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[sum:Jun2018:qk]&quot;</bucket>
              <bucket>&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[sum:Jul2018:qk]&quot;</bucket>
              <bucket>&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[sum:Sep2018:qk]&quot;</bucket>
              <bucket>&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[sum:Aug2018:qk]&quot;</bucket>
              <bucket>&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[sum:Oct2018:qk]&quot;</bucket>
              <bucket>&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[sum:Nov2018:qk]&quot;</bucket>
              <bucket>&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[sum:Dec2018:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.171xzxs04g7zhv11xnwar0nl9eup].[none:StateName:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:StateName:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.171xzxs04g7zhv11xnwar0nl9eup].[:Measure Names]</column>
            <column>[federated.171xzxs04g7zhv11xnwar0nl9eup].[none:StateName:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#499894' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.171xzxs04g7zhv11xnwar0nl9eup].[:Measure Names]</rows>
        <cols>[federated.171xzxs04g7zhv11xnwar0nl9eup].[Multiple Values]</cols>
      </table>
      <simple-id uuid='{8D882EE3-21DF-4EF1-A756-5258431A3704}' />
    </worksheet>
    <worksheet name='2019 Avg Housing Data'>
      <layout-options>
        <title>
          <formatted-text>
            <run>2019</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='housing_prices' name='federated.171xzxs04g7zhv11xnwar0nl9eup' />
          </datasources>
          <datasource-dependencies datasource='federated.171xzxs04g7zhv11xnwar0nl9eup'>
            <column datatype='integer' name='[Apr2019]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Aug2019]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Dec2019]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Feb2019]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Jan2019]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Jul2019]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Jun2019]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Mar2019]' role='measure' type='quantitative' />
            <column datatype='integer' name='[May2019]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Nov2019]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Oct2019]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Sep2019]' role='measure' type='quantitative' />
            <column caption='State Name' datatype='string' name='[StateName]' role='dimension' type='nominal' />
            <column-instance column='[Apr2019]' derivation='Avg' name='[avg:Apr2019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Aug2019]' derivation='Avg' name='[avg:Aug2019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Dec2019]' derivation='Avg' name='[avg:Dec2019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Feb2019]' derivation='Avg' name='[avg:Feb2019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Jan2019]' derivation='Avg' name='[avg:Jan2019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Jul2019]' derivation='Avg' name='[avg:Jul2019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Jun2019]' derivation='Avg' name='[avg:Jun2019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Mar2019]' derivation='Avg' name='[avg:Mar2019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[May2019]' derivation='Avg' name='[avg:May2019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Nov2019]' derivation='Avg' name='[avg:Nov2019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Oct2019]' derivation='Avg' name='[avg:Oct2019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sep2019]' derivation='Avg' name='[avg:Sep2019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[StateName]' derivation='None' name='[none:StateName:nk]' pivot='key' type='nominal' />
            <column-instance column='[Apr2019]' derivation='Sum' name='[sum:Apr2019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Aug2019]' derivation='Sum' name='[sum:Aug2019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Dec2019]' derivation='Sum' name='[sum:Dec2019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Feb2019]' derivation='Sum' name='[sum:Feb2019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Jan2019]' derivation='Sum' name='[sum:Jan2019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Jul2019]' derivation='Sum' name='[sum:Jul2019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Jun2019]' derivation='Sum' name='[sum:Jun2019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Mar2019]' derivation='Sum' name='[sum:Mar2019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[May2019]' derivation='Sum' name='[sum:May2019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Nov2019]' derivation='Sum' name='[sum:Nov2019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Oct2019]' derivation='Sum' name='[sum:Oct2019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sep2019]' derivation='Sum' name='[sum:Sep2019:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.171xzxs04g7zhv11xnwar0nl9eup].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[sum:Jan2019:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[sum:Feb2019:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[sum:Mar2019:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[sum:Apr2019:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[sum:May2019:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[sum:Jun2019:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[sum:Jul2019:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[sum:Aug2019:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[sum:Sep2019:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[sum:Oct2019:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[sum:Nov2019:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[sum:Dec2019:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.171xzxs04g7zhv11xnwar0nl9eup].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[avg:Jan2019:qk]&quot;</bucket>
              <bucket>&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[avg:Feb2019:qk]&quot;</bucket>
              <bucket>&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[avg:Mar2019:qk]&quot;</bucket>
              <bucket>&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[avg:Apr2019:qk]&quot;</bucket>
              <bucket>&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[avg:May2019:qk]&quot;</bucket>
              <bucket>&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[avg:Jun2019:qk]&quot;</bucket>
              <bucket>&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[avg:Jul2019:qk]&quot;</bucket>
              <bucket>&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[avg:Aug2019:qk]&quot;</bucket>
              <bucket>&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[avg:Sep2019:qk]&quot;</bucket>
              <bucket>&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[avg:Oct2019:qk]&quot;</bucket>
              <bucket>&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[avg:Nov2019:qk]&quot;</bucket>
              <bucket>&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[avg:Dec2019:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.171xzxs04g7zhv11xnwar0nl9eup].[none:StateName:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:StateName:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.171xzxs04g7zhv11xnwar0nl9eup].[none:StateName:nk]</column>
            <column>[federated.171xzxs04g7zhv11xnwar0nl9eup].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.171xzxs04g7zhv11xnwar0nl9eup].[Multiple Values]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.171xzxs04g7zhv11xnwar0nl9eup].[:Measure Names]</rows>
        <cols>[federated.171xzxs04g7zhv11xnwar0nl9eup].[Multiple Values]</cols>
      </table>
      <simple-id uuid='{DBA6C398-CD06-41F7-94A7-D0E2BFDEB8E0}' />
    </worksheet>
    <worksheet name='2020 Avg Housing Data'>
      <layout-options>
        <title>
          <formatted-text>
            <run>2020</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='housing_prices' name='federated.171xzxs04g7zhv11xnwar0nl9eup' />
          </datasources>
          <datasource-dependencies datasource='federated.171xzxs04g7zhv11xnwar0nl9eup'>
            <column datatype='integer' name='[Feb2020]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Jan2020]' role='measure' type='quantitative' />
            <column caption='State Name' datatype='string' name='[StateName]' role='dimension' type='nominal' />
            <column-instance column='[Feb2020]' derivation='Avg' name='[avg:Feb2020:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Jan2020]' derivation='Avg' name='[avg:Jan2020:qk]' pivot='key' type='quantitative' />
            <column-instance column='[StateName]' derivation='None' name='[none:StateName:nk]' pivot='key' type='nominal' />
            <column-instance column='[Feb2020]' derivation='Sum' name='[sum:Feb2020:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Jan2020]' derivation='Sum' name='[sum:Jan2020:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.171xzxs04g7zhv11xnwar0nl9eup].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[sum:Jan2020:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[sum:Feb2020:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.171xzxs04g7zhv11xnwar0nl9eup].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[avg:Jan2020:qk]&quot;</bucket>
              <bucket>&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[avg:Feb2020:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.171xzxs04g7zhv11xnwar0nl9eup].[none:StateName:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:StateName:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.171xzxs04g7zhv11xnwar0nl9eup].[:Measure Names]</column>
            <column>[federated.171xzxs04g7zhv11xnwar0nl9eup].[none:StateName:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.171xzxs04g7zhv11xnwar0nl9eup].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#b07aa1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.171xzxs04g7zhv11xnwar0nl9eup].[:Measure Names]</rows>
        <cols>[federated.171xzxs04g7zhv11xnwar0nl9eup].[Multiple Values]</cols>
      </table>
      <simple-id uuid='{CFBF4E9E-4C97-4EAA-AA69-6EE0AB86B076}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <table>
        <view>
          <datasources>
            <datasource caption='housing_prices' name='federated.171xzxs04g7zhv11xnwar0nl9eup' />
          </datasources>
          <datasource-dependencies datasource='federated.171xzxs04g7zhv11xnwar0nl9eup'>
            <column datatype='integer' name='[Apr2018]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Apr2019]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Aug2018]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Aug2019]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Dec2018]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Dec2019]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Feb2018]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Feb2019]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Feb2020]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Jan2019]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Jan2020]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Jul2018]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Jul2019]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Jun2018]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Jun2019]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Mar2018]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Mar2019]' role='measure' type='quantitative' />
            <column datatype='integer' name='[May2018]' role='measure' type='quantitative' />
            <column datatype='integer' name='[May2019]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Nov2018]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Nov2019]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Oct2018]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Oct2019]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Sep2018]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Sep2019]' role='measure' type='quantitative' />
            <column caption='State Name' datatype='string' name='[StateName]' role='dimension' type='nominal' />
            <column-instance column='[StateName]' derivation='None' name='[none:StateName:nk]' pivot='key' type='nominal' />
            <column-instance column='[Apr2018]' derivation='Sum' name='[sum:Apr2018:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Apr2019]' derivation='Sum' name='[sum:Apr2019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Aug2018]' derivation='Sum' name='[sum:Aug2018:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Aug2019]' derivation='Sum' name='[sum:Aug2019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Dec2018]' derivation='Sum' name='[sum:Dec2018:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Dec2019]' derivation='Sum' name='[sum:Dec2019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Feb2018]' derivation='Sum' name='[sum:Feb2018:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Feb2019]' derivation='Sum' name='[sum:Feb2019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Feb2020]' derivation='Sum' name='[sum:Feb2020:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Jan2019]' derivation='Sum' name='[sum:Jan2019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Jan2020]' derivation='Sum' name='[sum:Jan2020:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Jul2018]' derivation='Sum' name='[sum:Jul2018:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Jul2019]' derivation='Sum' name='[sum:Jul2019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Jun2018]' derivation='Sum' name='[sum:Jun2018:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Jun2019]' derivation='Sum' name='[sum:Jun2019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Mar2018]' derivation='Sum' name='[sum:Mar2018:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Mar2019]' derivation='Sum' name='[sum:Mar2019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[May2018]' derivation='Sum' name='[sum:May2018:qk]' pivot='key' type='quantitative' />
            <column-instance column='[May2019]' derivation='Sum' name='[sum:May2019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Nov2018]' derivation='Sum' name='[sum:Nov2018:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Nov2019]' derivation='Sum' name='[sum:Nov2019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Oct2018]' derivation='Sum' name='[sum:Oct2018:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Oct2019]' derivation='Sum' name='[sum:Oct2019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sep2018]' derivation='Sum' name='[sum:Sep2018:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sep2019]' derivation='Sum' name='[sum:Sep2019:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.171xzxs04g7zhv11xnwar0nl9eup].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[sum:Feb2018:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[sum:Mar2018:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[sum:Apr2018:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[sum:May2018:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[sum:Jun2018:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[sum:Jul2018:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[sum:Aug2018:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[sum:Sep2018:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[sum:Oct2018:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[sum:Nov2018:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[sum:Dec2018:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[sum:Jan2019:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[sum:Feb2019:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[sum:Mar2019:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[sum:Apr2019:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[sum:May2019:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[sum:Jun2019:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[sum:Jul2019:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[sum:Aug2019:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[sum:Sep2019:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[sum:Oct2019:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[sum:Nov2019:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[sum:Dec2019:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[sum:Jan2020:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[sum:Feb2020:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.171xzxs04g7zhv11xnwar0nl9eup].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[sum:Feb2018:qk]&quot;</bucket>
              <bucket>&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[sum:Mar2018:qk]&quot;</bucket>
              <bucket>&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[sum:Apr2018:qk]&quot;</bucket>
              <bucket>&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[sum:May2018:qk]&quot;</bucket>
              <bucket>&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[sum:Jun2018:qk]&quot;</bucket>
              <bucket>&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[sum:Jul2018:qk]&quot;</bucket>
              <bucket>&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[sum:Aug2018:qk]&quot;</bucket>
              <bucket>&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[sum:Sep2018:qk]&quot;</bucket>
              <bucket>&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[sum:Oct2018:qk]&quot;</bucket>
              <bucket>&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[sum:Nov2018:qk]&quot;</bucket>
              <bucket>&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[sum:Dec2018:qk]&quot;</bucket>
              <bucket>&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[sum:Jan2019:qk]&quot;</bucket>
              <bucket>&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[sum:Feb2019:qk]&quot;</bucket>
              <bucket>&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[sum:Mar2019:qk]&quot;</bucket>
              <bucket>&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[sum:Apr2019:qk]&quot;</bucket>
              <bucket>&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[sum:May2019:qk]&quot;</bucket>
              <bucket>&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[sum:Jun2019:qk]&quot;</bucket>
              <bucket>&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[sum:Jul2019:qk]&quot;</bucket>
              <bucket>&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[sum:Aug2019:qk]&quot;</bucket>
              <bucket>&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[sum:Sep2019:qk]&quot;</bucket>
              <bucket>&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[sum:Oct2019:qk]&quot;</bucket>
              <bucket>&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[sum:Nov2019:qk]&quot;</bucket>
              <bucket>&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[sum:Dec2019:qk]&quot;</bucket>
              <bucket>&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[sum:Jan2020:qk]&quot;</bucket>
              <bucket>&quot;[federated.171xzxs04g7zhv11xnwar0nl9eup].[sum:Feb2020:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.171xzxs04g7zhv11xnwar0nl9eup].[none:StateName:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:StateName:nk]' member='&quot;California&quot;' />
              <groupfilter function='member' level='[none:StateName:nk]' member='&quot;Colorado&quot;' />
              <groupfilter function='member' level='[none:StateName:nk]' member='&quot;Florida&quot;' />
              <groupfilter function='member' level='[none:StateName:nk]' member='&quot;Georgia&quot;' />
              <groupfilter function='member' level='[none:StateName:nk]' member='&quot;Illinois&quot;' />
              <groupfilter function='member' level='[none:StateName:nk]' member='&quot;Massachusetts&quot;' />
              <groupfilter function='member' level='[none:StateName:nk]' member='&quot;Minnesota&quot;' />
              <groupfilter function='member' level='[none:StateName:nk]' member='&quot;Missouri&quot;' />
              <groupfilter function='member' level='[none:StateName:nk]' member='&quot;Nebraska&quot;' />
              <groupfilter function='member' level='[none:StateName:nk]' member='&quot;New Hampshire&quot;' />
              <groupfilter function='member' level='[none:StateName:nk]' member='&quot;New Jersey&quot;' />
              <groupfilter function='member' level='[none:StateName:nk]' member='&quot;New Mexico&quot;' />
              <groupfilter function='member' level='[none:StateName:nk]' member='&quot;New York&quot;' />
              <groupfilter function='member' level='[none:StateName:nk]' member='&quot;North Carolina&quot;' />
              <groupfilter function='member' level='[none:StateName:nk]' member='&quot;Oregon&quot;' />
              <groupfilter function='member' level='[none:StateName:nk]' member='&quot;South Carolina&quot;' />
              <groupfilter function='member' level='[none:StateName:nk]' member='&quot;Tennessee&quot;' />
              <groupfilter function='member' level='[none:StateName:nk]' member='&quot;Texas&quot;' />
              <groupfilter function='member' level='[none:StateName:nk]' member='&quot;Virginia&quot;' />
              <groupfilter function='member' level='[none:StateName:nk]' member='&quot;Washington&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.171xzxs04g7zhv11xnwar0nl9eup].[:Measure Names]</column>
            <column>[federated.171xzxs04g7zhv11xnwar0nl9eup].[none:StateName:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.171xzxs04g7zhv11xnwar0nl9eup].[Multiple Values]' field-type='quantitative' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.171xzxs04g7zhv11xnwar0nl9eup].[none:StateName:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.171xzxs04g7zhv11xnwar0nl9eup].[Multiple Values]</rows>
        <cols>[federated.171xzxs04g7zhv11xnwar0nl9eup].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{CF0152F7-689F-48EC-B2A1-A32D0BB41AEA}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Overtime Housing Price Trends'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='85750' id='7' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='85750' id='5' type-v2='layout-basic' w='98400' x='800' y='1000'>
              <zone h='85750' id='3' name='Sheet 3' w='98400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone h='12250' id='11' param='horz' type-v2='layout-flow' w='98400' x='800' y='86750'>
            <zone fixed-size='376' h='12250' id='10' is-fixed='true' name='Sheet 3' pane-specification-id='0' param='[federated.171xzxs04g7zhv11xnwar0nl9eup].[none:StateName:nk]' type-v2='color' w='98400' x='800' y='86750'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='25' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='24' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='85750' id='3' is-fixed='true' name='Sheet 3' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='376' h='12250' id='10' name='Sheet 3' pane-specification-id='0' param='[federated.171xzxs04g7zhv11xnwar0nl9eup].[none:StateName:nk]' type-v2='color' w='98400' x='800' y='86750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{D698AC7C-82FA-4E95-8097-A72F76EA23E5}' />
    </dashboard>
    <dashboard name='Year over Year'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='housing_prices' name='federated.171xzxs04g7zhv11xnwar0nl9eup' />
      </datasources>
      <datasource-dependencies datasource='federated.171xzxs04g7zhv11xnwar0nl9eup'>
        <column caption='State Name' datatype='string' name='[StateName]' role='dimension' type='nominal' />
        <column-instance column='[StateName]' derivation='None' name='[none:StateName:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='88605' id='21' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='88605' id='19' type-v2='layout-basic' w='98400' x='800' y='1000'>
              <zone h='37625' id='9' name='2019 Avg Housing Data' w='98400' x='800' y='33250'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='18730' id='10' name='2020 Avg Housing Data' w='98400' x='800' y='70875'>
                <layout-cache minwidth='180' type-h='fixed' type-w='scalable' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='32250' id='18' name='2018 Avg Housing Data' w='98400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone h='9395' id='23' type-v2='layout-flow' w='98400' x='800' y='89605'>
            <zone h='6500' id='22' mode='dropdown' name='2018 Avg Housing Data' param='[federated.171xzxs04g7zhv11xnwar0nl9eup].[none:StateName:nk]' type-v2='filter' w='98400' x='800' y='89605'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='800' minheight='800' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='31' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='30' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone h='6500' id='22' mode='dropdown' name='2018 Avg Housing Data' param='[federated.171xzxs04g7zhv11xnwar0nl9eup].[none:StateName:nk]' type-v2='filter' w='98400' x='800' y='89605'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='250' h='32250' id='18' is-fixed='true' name='2018 Avg Housing Data' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='37625' id='9' is-fixed='true' name='2019 Avg Housing Data' w='98400' x='800' y='33250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='142' h='18730' id='10' is-fixed='true' name='2020 Avg Housing Data' w='98400' x='800' y='70875'>
                  <layout-cache minwidth='180' type-h='fixed' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{516C5A5F-C958-41C8-9266-8F9192AE4C00}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.171xzxs04g7zhv11xnwar0nl9eup].[none:StateName:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.171xzxs04g7zhv11xnwar0nl9eup].[:Measure Names]</field>
            <field>[federated.171xzxs04g7zhv11xnwar0nl9eup].[none:Calculation_1119707484027346945:ok]</field>
            <field>[federated.171xzxs04g7zhv11xnwar0nl9eup].[none:Calculation_1119707484027445251:qk]</field>
            <field>[federated.171xzxs04g7zhv11xnwar0nl9eup].[none:Calculation_1119707484027506692:ok]</field>
            <field>[federated.171xzxs04g7zhv11xnwar0nl9eup].[none:CityName:nk]</field>
            <field>[federated.171xzxs04g7zhv11xnwar0nl9eup].[none:NoOfBeds:ok]</field>
            <field>[federated.171xzxs04g7zhv11xnwar0nl9eup].[none:NoOfBeds:qk]</field>
            <field>[federated.171xzxs04g7zhv11xnwar0nl9eup].[none:State:nk]</field>
            <field>[federated.171xzxs04g7zhv11xnwar0nl9eup].[none:StateName:nk]</field>
            <field>[federated.171xzxs04g7zhv11xnwar0nl9eup].[tyr:Calculation_1119707484029030406:qk]</field>
            <field>[federated.171xzxs04g7zhv11xnwar0nl9eup].[yr:Calculation_1119707484028178437:ok]</field>
            <field>[federated.171xzxs04g7zhv11xnwar0nl9eup].[yr:Calculation_1119707484029030406:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4DE533A8-05A5-428B-8B3C-545F14660565}' />
    </window>
    <window class='worksheet' name='2018 Avg Housing Data'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.171xzxs04g7zhv11xnwar0nl9eup].[none:StateName:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.171xzxs04g7zhv11xnwar0nl9eup].[:Measure Names]</field>
            <field>[federated.171xzxs04g7zhv11xnwar0nl9eup].[none:CityName:nk]</field>
            <field>[federated.171xzxs04g7zhv11xnwar0nl9eup].[none:State:nk]</field>
            <field>[federated.171xzxs04g7zhv11xnwar0nl9eup].[none:StateName:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{15B2D504-D952-41B3-AD53-C1247728163C}' />
    </window>
    <window class='worksheet' name='2019 Avg Housing Data'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.171xzxs04g7zhv11xnwar0nl9eup].[none:StateName:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.171xzxs04g7zhv11xnwar0nl9eup].[:Measure Names]</field>
            <field>[federated.171xzxs04g7zhv11xnwar0nl9eup].[none:State:nk]</field>
            <field>[federated.171xzxs04g7zhv11xnwar0nl9eup].[none:StateName:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{17C22B78-0B29-4922-A10D-EF1514F33EC7}' />
    </window>
    <window class='worksheet' name='2020 Avg Housing Data'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.171xzxs04g7zhv11xnwar0nl9eup].[none:StateName:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.171xzxs04g7zhv11xnwar0nl9eup].[:Measure Names]</field>
            <field>[federated.171xzxs04g7zhv11xnwar0nl9eup].[none:State:nk]</field>
            <field>[federated.171xzxs04g7zhv11xnwar0nl9eup].[none:StateName:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B63C025E-2649-4EFF-8AD8-18D0FB4A8E62}' />
    </window>
    <window class='dashboard' maximized='true' name='Overtime Housing Price Trends'>
      <viewpoints>
        <viewpoint name='Sheet 3'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{976481BE-99CD-4797-AC30-F3D407BFC985}' />
    </window>
    <window class='dashboard' name='Year over Year'>
      <viewpoints>
        <viewpoint name='2018 Avg Housing Data'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='2019 Avg Housing Data'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='2020 Avg Housing Data'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{A7B9D28D-0DF5-44E0-BA06-ADF84EAFC61C}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='2018 Avg Housing Data' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='2019 Avg Housing Data' width='192'>
      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
      BY0jAIeC5v8A6aDHVbbmjX0AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='99' name='2020 Avg Housing Data' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Overtime Housing Price Trends' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Year over Year' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
